{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/Buttons/Buttons.jsx","components/FindMovie/FindMovie.js","shapes/movieShape.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","BASE_URL","getMovie","a","fetch","response","json","result","Buttons","onClick","disabled","type","FindMovie","PropTypes","arrayOf","shape","string","isRequired","addMovie","useState","foundMovie","setFoundMovie","error","setError","setTitle","searchMovie","currentMovie","Responce","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","some","htmlFor","id","placeholder","classNames","value","onChange","target","App","setMovies","newMovie","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52ed9636.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=2141f404';\n\nexport async function getMovie(title) {\n  const response = await fetch(`${BASE_URL}&t=[${title}]`);\n  const result = await response.json();\n\n  return result;\n}\n","import React from 'react';\n\nexport const Buttons = ({ onClick, disabled }) => (\n  <div className=\"field is-grouped\">\n    <div className=\"control\">\n      <button\n        type=\"button\"\n        className=\"button is-light\"\n        onClick={onClick}\n      >\n        Find a movie\n      </button>\n    </div>\n\n    <div className=\"control\">\n      <button\n        type=\"submit\"\n        className=\"button is-primary\"\n        disabled={disabled}\n      >\n        Add to the list\n      </button>\n    </div>\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\n\nimport { getMovie } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\nimport { Buttons } from '../Buttons';\nimport { movieShape } from '../../shapes/movieShape';\n\nexport const FindMovie = ({ addMovie, movies }) => {\n  const [foundMovie, setFoundMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [title, setTitle] = useState('');\n\n  const searchMovie = async() => {\n    const currentMovie = await getMovie(title);\n\n    if (currentMovie.Responce === 'False') {\n      setError('No movies found');\n      setFoundMovie(null);\n\n      return;\n    }\n\n    setFoundMovie({\n      title: currentMovie.Title,\n      description: currentMovie.Plot,\n      imgUrl: currentMovie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${currentMovie.imdbID}`,\n      imdbID: currentMovie.imdbID,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!movies.some(movie => movie.imdbID === foundMovie.imdbID)) {\n      addMovie(foundMovie);\n\n      setFoundMovie(null);\n      setTitle('');\n    } else {\n      setError('Already added');\n    }\n  };\n\n  const handleChange = (event) => {\n    if (event.target.value !== title) {\n      setError(null);\n    }\n\n    setTitle(event.target.value);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              value={title}\n              onChange={handleChange}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              {error}\n            </p>\n          )}\n        </div>\n\n        <Buttons onClick={searchMovie} disabled={!foundMovie} />\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {foundMovie && (\n          <MovieCard {...foundMovie} />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  movies: movieShape.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const movieShape = PropTypes.arrayOf(PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n}).isRequired);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n\n  const addMovie = (newMovie) => {\n    setMovies(prevMovies => [...prevMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}